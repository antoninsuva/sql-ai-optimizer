{% extends 'base.html.twig' %}

{% block title %}MySQL Optimizer - Runs{% endblock %}

{% block content %}
    <div class="row mb-5">
        <div class="col-md-12 text-center">
            <h1 class="display-4 mb-3">MySQL Query Optimizer</h1>
            <p class="lead">Optimize your MySQL database queries using AI-powered analysis</p>
        </div>
    </div>

    {% if runs|length > 0 %}
        <div class="card mb-4 shadow-sm">
            <div class="card-header">
                <h2 class="h5 mb-0">Previous Analysis Runs</h2>
            </div>
            <div class="card-body">
                <div class="list-group">
                    {% for run in runs %}
                        <a href="/run/{{run.id}}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                            Run #{{ run.id }} - {{ run.created_at|date('Y-m-d H:i:s') }}
                            <span class="badge bg-primary rounded-pill">{{ run.query_count }} queries</span>
                        </a>
                    {% endfor %}
                </div>
            </div>
        </div>
    {% else %}
        <div class="alert alert-info mb-4">
            <i class="bi bi-info-circle me-2"></i> No previous runs found. Start by generating a new optimization analysis.
        </div>
    {% endif %}

    <div class="card mb-5 shadow-sm">
        <div class="card-header">
            <h2 class="h5 mb-0">Generate New Optimization Analysis</h2>
        </div>
        <div class="card-body">
            <form id="optimizationForm" method="POST" action="/new-run">
                <div class="mb-3">
                    <label for="prompt" class="form-label">Enter your database context and queries to optimize:</label>
                    <textarea class="form-control" id="prompt" name="prompt" rows="8" placeholder="Describe your database schema and queries you want to optimize...">{{ prompt|default('') }}</textarea>
                </div>
                <div class="alert alert-warning mb-3">
                    <i class="bi bi-clock me-2"></i> Please note: Generating optimization suggestions may take several minutes.
                </div>
                <div class="text-end">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="bi bi-lightning-charge-fill me-1"></i> Generate Optimization Suggestions
                    </button>
                </div>
            </form>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('optimizationForm');
        
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            
            // Check browser-side validation
            if (!form.checkValidity()) {
                return;
            }
            
            // Create and show loading overlay
            const loadingOverlay = document.createElement('div');
            loadingOverlay.id = 'loading-overlay';
            loadingOverlay.style.cssText = 'position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(255,255,255,0.8);display:flex;justify-content:center;align-items:center;z-index:9999;';
            loadingOverlay.innerHTML = '<div class="text-center"><div class="spinner-border text-primary mb-3" role="status"></div><p>Generating optimization suggestions... This may take a few minutes.</p></div>';
            document.body.appendChild(loadingOverlay);
            
            // Get form data
            const formData = new FormData(form);
            
            // Use fetch API to submit the form
            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.url) {
                    // Redirect to the provided URL
                    window.location.href = data.url;
                } else {
                    throw new Error('No redirect URL provided in response');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                // Remove loading overlay
                document.getElementById('loading-overlay').remove();
                
                // Show error message
                const errorDiv = document.createElement('div');
                errorDiv.className = 'alert alert-danger mt-3';
                errorDiv.innerHTML = '<i class="bi bi-exclamation-triangle me-2"></i> An error occurred. Please try again.';
                form.before(errorDiv);
                
                // Auto-remove the error after 5 seconds
                setTimeout(() => {
                    const messages = document.querySelectorAll('.alert-danger');
                    messages.forEach(msg => msg.remove());
                }, 5000);
            });
        });
    });
</script>
{% endblock %} 